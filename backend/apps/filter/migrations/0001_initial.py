# Generated by Django 5.1 on 2024-10-13 00:49

import django.db.models.deletion
import parler.fields
import parler.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="FilterType",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("slug", models.SlugField(blank=True, unique=True, verbose_name="slug")),
            ],
            options={
                "verbose_name": "filter type",
                "verbose_name_plural": "filter types",
                "db_table": "filter_type",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="FilterValue",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("slug", models.SlugField(blank=True, unique=True, verbose_name="slug")),
                ("metadata", models.JSONField(blank=True, default=dict, verbose_name="metadata")),
                (
                    "filter_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="values",
                        to="filter.filtertype",
                        verbose_name="filter type",
                    ),
                ),
            ],
            options={
                "verbose_name": "filter value",
                "verbose_name_plural": "filter values",
                "db_table": "filter_value",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="FilterGroup",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("slug", models.SlugField(blank=True, unique=True, verbose_name="slug")),
                (
                    "filter_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="filter.filtertype", verbose_name="filter type"
                    ),
                ),
                ("filter_values", models.ManyToManyField(to="filter.filtervalue", verbose_name="filter values")),
            ],
            options={
                "verbose_name": "filter group",
                "verbose_name_plural": "filter groups",
                "db_table": "filter_group",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="FilterValueTranslation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("language_code", models.CharField(db_index=True, max_length=15, verbose_name="Language")),
                ("value", models.CharField(max_length=50, verbose_name="value")),
                ("description", models.TextField(blank=True, verbose_name="description")),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="filter.filtervalue",
                    ),
                ),
            ],
            options={
                "verbose_name": "filter value Translation",
                "db_table": "filter_value_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="FilterGroupTranslation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("language_code", models.CharField(db_index=True, max_length=15, verbose_name="Language")),
                ("name", models.CharField(max_length=50, verbose_name="name")),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="filter.filtergroup",
                    ),
                ),
            ],
            options={
                "verbose_name": "filter group Translation",
                "db_table": "filter_group_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="FilterTypeTranslation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("language_code", models.CharField(db_index=True, max_length=15, verbose_name="Language")),
                ("name", models.CharField(max_length=50, verbose_name="name")),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="filter.filtertype",
                    ),
                ),
            ],
            options={
                "verbose_name": "filter type Translation",
                "db_table": "filter_type_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.AddConstraint(
            model_name="filtervalue",
            constraint=models.UniqueConstraint(fields=("slug", "filter_type"), name="unique_slug_filter_type"),
        ),
        migrations.AlterUniqueTogether(
            name="filtervaluetranslation",
            unique_together={("language_code", "master")},
        ),
    ]
